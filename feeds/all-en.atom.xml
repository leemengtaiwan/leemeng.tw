<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>LeeMeng</title><link href="https://leemeng.tw/" rel="alternate"></link><link href="https://leemeng.tw/feeds/all-en.atom.xml" rel="self"></link><id>https://leemeng.tw/</id><updated>2019-05-05T02:20:00+09:00</updated><entry><title>Generate Anime using CartoonGAN and TensorFlow 2.0</title><link href="https://leemeng.tw/generate-anime-using-cartoongan-and-tensorflow2-en.html" rel="alternate"></link><published>2019-05-05T02:20:00+09:00</published><updated>2019-05-05T02:20:00+09:00</updated><author><name>Lee Meng</name></author><id>tag:leemeng.tw,2019-05-05:/generate-anime-using-cartoongan-and-tensorflow2-en.html</id><summary type="html">&lt;p&gt;This post will demonstrate how you can actually apply CartoonGAN to cartoonize real world images into animes. We will also introduce our github project which enable anyone to train their own CartoonGAN using TensorFlow 2.0.&lt;/p&gt;</summary><content type="html">&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;link href="https://leemeng.tw/tfjs-apps/cartoongan/cartoongan.css" rel="stylesheet"/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;blockquote&gt;
&lt;p&gt;
                        What images would you choose to transform if you could turn any of them into anime using AI?
                        &lt;br/&gt;
&lt;br/&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;In this post, I will briefly introduce a &lt;a href="https://github.com/mnicnc404/CartoonGan-tensorflow"&gt;CartoonGAN implemented in TensorFlow 2.0 Alpha&lt;/a&gt; by my friend &lt;a href="https://github.com/mnicnc404"&gt;mnicnc404&lt;/a&gt; and me.&lt;/p&gt;
&lt;p&gt;I will also demo a &lt;a href="https://www.tensorflow.org/js"&gt;TensorFlow.js&lt;/a&gt; app which allows you to generate anime on your browser directly.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://openaccess.thecvf.com/content_cvpr_2018/papers/Chen_CartoonGAN_Generative_Adversarial_CVPR_2018_paper.pdf"&gt;CartoonGAN (original paper)&lt;/a&gt; was published in 2018 &lt;a href="http://cvpr2019.thecvf.com/"&gt;CVPR&lt;/a&gt; and is a &lt;a href="https://youtu.be/yFBFl1cLYx8?list=PLtBw6njQRU-rwp5__7C0oIVt26ZgjG9NI&amp;amp;t=1879"&gt;Generative Adversarial Network (GAN)&lt;/a&gt; which attempts to transform real world images into cartoon-style images.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;video autoplay="" loop="" muted="" playsinline="" poster="https://leemeng.tw/images/cartoongan/cat_cover.jpg"&gt;
&lt;source src="https://leemeng.tw/images/cartoongan/cat_cover.mp4" type="video/mp4"/&gt;
                    您的瀏覽器不支援影片標籤，請留言通知我：S
                &lt;/video&gt;
&lt;center&gt;
                        Top-left corner is real world image, and the other 3 images are generated by CartoonGAN using different anime styles
                        &lt;br/&gt;
&lt;br/&gt;
&lt;/center&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;The ideas demonstrated in the &lt;a href="http://openaccess.thecvf.com/content_cvpr_2018/papers/Chen_CartoonGAN_Generative_Adversarial_CVPR_2018_paper.pdf"&gt;paper&lt;/a&gt; are very interesting and the authors also show good results using two of my favorite Japanese animator styles: &lt;a href="https://en.wikipedia.org/wiki/Makoto_Shinkai"&gt;Shinkai Makoto&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Hayao_Miyazaki"&gt;Miyazaki Hayao&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Therefore, I decided to build a &lt;a href="https://www.tensorflow.org/js"&gt;TensorFlow.js&lt;/a&gt; app to allow anyone to try CartoonGAN with ease.&lt;/p&gt;
&lt;p&gt;Choose your favorite anime style and upload one image, it's just that simple.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;video autoplay="" loop="" muted="" playsinline="" poster="https://leemeng.tw/20190413-cartoongan-demo-en.ipynb"&gt;
&lt;source src="https://leemeng.tw/images/cartoongan/tfjs-demo.mp4" type="video/mp4"/&gt;
                    您的瀏覽器不支援影片標籤，請留言通知我：S
                &lt;/video&gt;
&lt;br/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Under the hood, TensorFlow.js runs in your browser whilst:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;downloading the pretrained models&lt;/li&gt;
&lt;li&gt;cartoonizing uploaded images&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get the best performance, it is highly recommended that you:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;try the app on a desktop/laptop rather than mobile devices (to speed up transformation)&lt;/li&gt;
&lt;li&gt;try the app when network speed is fast（to minimalize loading time）&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Try-CartoonGAN-yourself"&gt;Try CartoonGAN yourself&lt;a class="anchor-link" href="#Try-CartoonGAN-yourself"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Without further ado, here is the tfjs app:&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;div class="row" id="container"&gt;
&lt;div class="column50"&gt;
&lt;div&gt;
&lt;img class="cartoongan_image" id="input" src="https://leemeng.tw/tfjs-apps/cartoongan/cat.png"/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="column50"&gt;
&lt;div&gt;
&lt;img class="cartoongan_image" id="pregenerated_output" src="https://leemeng.tw/tfjs-apps/cartoongan/cat_shinkai.jpg"/&gt;
&lt;canvas id="output" style="display:none"&gt;&lt;/canvas&gt;
&lt;/div&gt;
&lt;div id="app-status" style="display:none;padding:70px 0"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="row" style="margin-bottom:6rem;"&gt;
&lt;div class="column50"&gt;
&lt;label class="btn" style="margin-top: 2rem;height: 3rem;line-height:2.8rem;color:white;padding: 0 1rem"&gt;
            Upload Image
            &lt;input id="files" multiple="" name="files[]" style="display:none" type="file"/&gt;
&lt;/label&gt;
&lt;/div&gt;
&lt;div class="column50"&gt;
&lt;select id="styles" name="styles" style="margin: auto;display: block;margin-top: 0.8rem"&gt;
&lt;option selected="selected" value="shinkai"&gt;&lt;b&gt;Shinkai Makoto&lt;/b&gt; Style&lt;/option&gt;
&lt;option value="hayao"&gt;&lt;b&gt;Miyazaki Hayao&lt;/b&gt; Style&lt;/option&gt;
&lt;option value="hosoda"&gt;&lt;b&gt;Hosoda Mamoru&lt;/b&gt; Style&lt;/option&gt;
&lt;option value="paprika"&gt;&lt;b&gt;Paprika&lt;/b&gt; Style&lt;/option&gt;
&lt;/select&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;How does your &lt;a href="https://en.wikipedia.org/wiki/Anime"&gt;anime&lt;/a&gt; look?&lt;/p&gt;
&lt;p&gt;If the app seems to be stuck:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Loading Models&lt;/code&gt;: simply means it's still downloading the model&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cartoonizing images&lt;/code&gt;: it might indicate there is no sufficient computation power on your device&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can still generate anime in the next section using &lt;a href="https://www.tensorflow.org/"&gt;TensorFlow&lt;/a&gt; if tfjs doesn't work for you.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Generate-anime-using-TensorFlow-2"&gt;Generate anime using TensorFlow 2&lt;a class="anchor-link" href="#Generate-anime-using-TensorFlow-2"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;In addition to TensorFlow.js, we also implemented CartoonGAN using &lt;a href="https://www.tensorflow.org/alpha"&gt;TensorFlow 2.0 Alpha&lt;/a&gt;. If you want to transform larger images and/or gifs, you can run &lt;a href="https://colab.research.google.com/drive/1WIZBHix_cYIGsBKa4phIwCq5qXwO8fRX"&gt;this Colab notebook&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;video autoplay="" loop="" muted="" playsinline="" poster="https://leemeng.tw/images/cartoongan/colab-demo.jpg"&gt;
&lt;source src="https://leemeng.tw/images/cartoongan/colab-demo.mp4" type="video/mp4"/&gt;
                    您的瀏覽器不支援影片標籤，請留言通知我：S
                &lt;/video&gt;
&lt;center&gt;
                        You can use CartoonGAN to transform any images with our colab notebook
                        &lt;br/&gt;
&lt;br/&gt;
&lt;/center&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://colab.research.google.com/"&gt;Google Colaboratory&lt;/a&gt; is a cloud &lt;a href="https://jupyter.org/"&gt;Jupyter notebook&lt;/a&gt; environment allowing anyone to start their machine learning projects with free GPU available.&lt;/p&gt;
&lt;p&gt;In &lt;a href="https://colab.research.google.com/drive/1WIZBHix_cYIGsBKa4phIwCq5qXwO8fRX"&gt;this notebook&lt;/a&gt;, everything you need is set up for you:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Build TensorFlow 2.0 environment&lt;/li&gt;
&lt;li&gt;Clone &lt;a href="https://github.com/mnicnc404/CartoonGan-tensorflow"&gt;our github repo and download pretrained models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download arbitrary images on the web&lt;/li&gt;
&lt;li&gt;Transform the images using CartoonGAN&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You get the idea. All you have to do is open &lt;a href="https://colab.research.google.com/drive/1WIZBHix_cYIGsBKa4phIwCq5qXwO8fRX"&gt;the notebook&lt;/a&gt; and generate your anime. It's that simple.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Gallery:-some-anime-we-generated"&gt;Gallery: some anime we generated&lt;a class="anchor-link" href="#Gallery:-some-anime-we-generated"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Is better to share one's happiness than to enjoy it alone. In this section, we simply share some anime generated with CartoonGAN by ourselves.&lt;/p&gt;
&lt;p&gt;For easy comparison, every image below is divided into 4 parts where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;top-left: original real world image&lt;/li&gt;
&lt;li&gt;top-right: &lt;a href="https://en.wikipedia.org/wiki/Makoto_Shinkai"&gt;Shinkai Makoto&lt;/a&gt; style&lt;/li&gt;
&lt;li&gt;bottom-left: &lt;a href="https://en.wikipedia.org/wiki/Hayao_Miyazaki"&gt;Miyazaki Hayao&lt;/a&gt; style&lt;/li&gt;
&lt;li&gt;bottom-right: &lt;a href="https://en.wikipedia.org/wiki/Mamoru_Hosoda"&gt;Hosoda Mamoru&lt;/a&gt; style&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Click the arrows on the left/right to view different results:&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;style&gt;
&lt;!-- https://www.w3schools.com/w3css/w3css_slideshow.asp --&gt;
.w3-content,
.w3-auto {
    margin-left: auto;
    margin-right: auto
}

.w3-content {
    max-width: 980px
}

.w3-display-container:hover .w3-display-hover {
    display: block
}

.w3-display-container:hover span.w3-display-hover {
    display: inline-block
}

.w3-display-container {
    position: relative
}

.w3-button:hover {
    color: #000!important;
    background-color: inherit;
}

.w3-button {
    border: none;
    display: inline-block;
    padding: 8px 16px;
    vertical-align: middle;
    overflow: hidden;
    text-decoration: none;
    color: inherit;
    background-color: inherit;
    text-align: center;
    cursor: pointer;
    white-space: nowrap
}

.w3-button {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none
}

.w3-button:disabled {
    cursor: not-allowed;
    opacity: 0.3
}

.w3-display-left {
    position: absolute;
    top: 50%;
    left: 0%;
    transform: translate(0%, -50%);
    -ms-transform: translate(-0%, -50%)
}

.w3-display-right {
    position: absolute;
    top: 50%;
    right: 0%;
    transform: translate(0%, -50%);
    -ms-transform: translate(0%, -50%)
}

.mySlides {display:none;}
&lt;/style&gt;&lt;div class="w3-content w3-display-container"&gt;
&lt;video autoplay="" class="mySlides" loop="" muted="" playsinline="" style="width:100%"&gt;
&lt;source src="https://leemeng.tw/images/cartoongan/gallery/dance.mp4" type="video/mp4"/&gt;
        Your browser doesn't support video tag.
  &lt;/video&gt;
&lt;!--marvel--&gt;
&lt;video autoplay="" class="mySlides" loop="" muted="" playsinline="" style="width:100%"&gt;
&lt;source src="https://leemeng.tw/images/cartoongan/gallery/iron-man-face.mp4" type="video/mp4"/&gt;
        Your browser doesn't support video tag.
  &lt;/video&gt;
&lt;video autoplay="" class="mySlides" loop="" muted="" playsinline="" style="width:100%"&gt;
&lt;source src="https://leemeng.tw/images/cartoongan/gallery/iron-man.mp4" type="video/mp4"/&gt;
        Your browser doesn't support video tag.
  &lt;/video&gt;
&lt;img class="mySlides" src="https://leemeng.tw/images/cartoongan/gallery/static-woman-face.jpg" style="width:100%"/&gt;
&lt;img class="mySlides" src="https://leemeng.tw/images/cartoongan/gallery/static-temple.jpg" style="width:100%"/&gt;
&lt;!--cat--&gt;
&lt;video autoplay="" class="mySlides" loop="" muted="" playsinline="" style="width:100%"&gt;
&lt;source src="https://leemeng.tw/images/cartoongan/gallery/cat-shake-meme.mp4" type="video/mp4"/&gt;
        Your browser doesn't support video tag.
  &lt;/video&gt;
&lt;video autoplay="" class="mySlides" loop="" muted="" playsinline="" style="width:100%"&gt;
&lt;source src="https://leemeng.tw/images/cartoongan/gallery/cat-being-poked.mp4" type="video/mp4"/&gt;
        Your browser doesn't support video tag.
  &lt;/video&gt;
&lt;video autoplay="" class="mySlides" loop="" muted="" playsinline="" style="width:100%"&gt;
&lt;source src="https://leemeng.tw/images/cartoongan/gallery/cat-computer.mp4" type="video/mp4"/&gt;
        Your browser doesn't support video tag.
  &lt;/video&gt;
&lt;!--scenary--&gt;
&lt;video autoplay="" class="mySlides" loop="" muted="" playsinline="" style="width:100%"&gt;
&lt;source src="https://leemeng.tw/images/cartoongan/gallery/big-ben.mp4" type="video/mp4"/&gt;
        Your browser doesn't support video tag.
  &lt;/video&gt;
&lt;video autoplay="" class="mySlides" loop="" muted="" playsinline="" style="width:100%"&gt;
&lt;source src="https://leemeng.tw/images/cartoongan/gallery/city-street.mp4" type="video/mp4"/&gt;
        Your browser doesn't support video tag.
  &lt;/video&gt;
&lt;video autoplay="" class="mySlides" loop="" muted="" playsinline="" style="width:100%"&gt;
&lt;source src="https://leemeng.tw/images/cartoongan/gallery/church.mp4" type="video/mp4"/&gt;
        Your browser doesn't support video tag.
  &lt;/video&gt;
&lt;!--idol--&gt;
&lt;video autoplay="" class="mySlides" loop="" muted="" playsinline="" style="width:100%"&gt;
&lt;source src="https://leemeng.tw/images/cartoongan/gallery/demo.mp4" type="video/mp4"/&gt;
        Your browser doesn't support video tag.
  &lt;/video&gt;
&lt;video autoplay="" class="mySlides" loop="" muted="" playsinline="" style="width:100%"&gt;
&lt;source src="https://leemeng.tw/images/cartoongan/gallery/arakaki.mp4" type="video/mp4"/&gt;
        Your browser doesn't support video tag.
  &lt;/video&gt;
&lt;video autoplay="" class="mySlides" loop="" muted="" playsinline="" style="width:100%"&gt;
&lt;source src="https://leemeng.tw/images/cartoongan/gallery/harry-potter.mp4" type="video/mp4"/&gt;
        Your browser doesn't support video tag.
  &lt;/video&gt;
&lt;!--virtual character--&gt;
&lt;video autoplay="" class="mySlides" loop="" muted="" playsinline="" style="width:100%"&gt;
&lt;source src="https://leemeng.tw/images/cartoongan/gallery/pikachu.mp4" type="video/mp4"/&gt;
        Your browser doesn't support video tag.
  &lt;/video&gt;
&lt;video autoplay="" class="mySlides" loop="" muted="" playsinline="" style="width:100%"&gt;
&lt;source src="https://leemeng.tw/images/cartoongan/gallery/kumamon.mp4" type="video/mp4"/&gt;
        Your browser doesn't support video tag.
  &lt;/video&gt;
&lt;button class="w3-button w3-black w3-display-left" onclick="plusDivs(-1)"&gt;❮&lt;/button&gt;
&lt;button class="w3-button w3-black w3-display-right" onclick="plusDivs(1)"&gt;❯&lt;/button&gt;
&lt;/div&gt;&lt;script&gt;
var slideIndex = 1;
showDivs(slideIndex);

function plusDivs(n) {
  showDivs(slideIndex += n);
}

function showDivs(n) {
  var i;
  var x = document.getElementsByClassName("mySlides");
  if (n &gt; x.length) {slideIndex = 1}
  if (n &lt; 1) {slideIndex = x.length}
  for (i = 0; i &lt; x.length; i++) {
    x[i].style.display = "none";  
  }
  x[slideIndex-1].style.display = "block";  
}
&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Marvel movies, cute cats, scenery or pop idols, the sky is the limit. When trained, we can use CartoonGAN to combine everything with anime.&lt;/p&gt;
&lt;p&gt;Using Python script in our &lt;a href="https://github.com/mnicnc404/CartoonGan-tensorflow"&gt;github repo&lt;/a&gt;, you can generate these results with just one command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;cartoonize.py&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;--styles&lt;span class="w"&gt; &lt;/span&gt;shinkai&lt;span class="w"&gt; &lt;/span&gt;hayao&lt;span class="w"&gt; &lt;/span&gt;hosoda
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can imagine apps with similar features will become much more powerful in the near future. Everyone will be able to generate their own anime using various styles, while animators will be able to test their new ideas and draw drafts much more faster than ever before.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;blockquote&gt;
&lt;p&gt;
                        Generative models like CartoonGAN can show us many possibilities and inspire us.
                        &lt;br/&gt;
&lt;br/&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Train-your-own-CartoonGAN"&gt;Train your own CartoonGAN&lt;a class="anchor-link" href="#Train-your-own-CartoonGAN"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;You may noticed that we've put a lot of focus on &lt;strong&gt;actual application&lt;/strong&gt; rather than the &lt;a href="http://openaccess.thecvf.com/content_cvpr_2018/papers/Chen_CartoonGAN_Generative_Adversarial_CVPR_2018_paper.pdf"&gt;algorithmic details&lt;/a&gt; for CartoonGAN. That's because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I suspect most readers will be more interested in how to &lt;strong&gt;use&lt;/strong&gt; CartoonGAN as a service rather than how to &lt;strong&gt;train&lt;/strong&gt; a model themselves&lt;/li&gt;
&lt;li&gt;There are already lots of &lt;a href="#Recommended-learning-resources"&gt;great learning resources&lt;/a&gt; on how to train your GANs on the web&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;For those who are interested in implementation details of CartoonGAN, we suggest you take a look at &lt;a href="https://github.com/mnicnc404/CartoonGan-tensorflow"&gt;our github repo&lt;/a&gt;. If you have your own datasets, you can even train your own CartoonGAN simply in one command:&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;center&gt;
&lt;img src="https://leemeng.tw/images/cartoongan/train-demo.gif"/&gt;
&lt;/center&gt;
&lt;center&gt;
                        Our Python script provides detailed messages which allow you to understand what is happening behind the scenes
                        &lt;br/&gt;
&lt;br/&gt;
&lt;/center&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Our project can also be used to learn the latest version of TensorFlow since everything is implemented in &lt;a href="https://www.tensorflow.org/alpha"&gt;Tensorflow 2.0 alpha&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;a href="https://www.tensorflow.org/alpha/guide/keras/overview"&gt;tf.keras&lt;/a&gt; to implement custom layers and GAN&lt;/li&gt;
&lt;li&gt;Use &lt;a href="https://www.tensorflow.org/alpha/guide/data_performance"&gt;tf.data&lt;/a&gt; to properly load and process large amount of images&lt;/li&gt;
&lt;li&gt;Write custom train logic and make computation faster using &lt;a href="https://youtu.be/Up9CvRLIIIw?list=PLQY2H8rRoyvzoUYI26kHmKSJBedn3SQuB"&gt;tf.function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;a href="https://www.tensorflow.org/tensorboard/r2/get_started#using_tensorboard_with_other_methods"&gt;TensorBoard&lt;/a&gt; to monitor model performance in real-time&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;As some of you already knew, it is not easy to train a GAN. You must keep monitoring your model's performance to decide how to adjust your hyper-parameters or even model architecture accordingly.&lt;/p&gt;
&lt;p&gt;In our &lt;a href="https://github.com/mnicnc404/CartoonGan-tensorflow/blob/master/train.py"&gt;training script&lt;/a&gt;, TensorBoard is integrated perfectly so you can monitor your model's performance easily:&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;center&gt;
&lt;img src="https://leemeng.tw/images/cartoongan/tensorboard-metrics.jpg"/&gt;
&lt;/center&gt;
&lt;center&gt;
                        One result of many experiments we tried on TensorBoard
                        &lt;br/&gt;
&lt;br/&gt;
&lt;/center&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;In addition to metrics and loss functions, it is good practice to keep an eye on the images generated by GAN during training as well.&lt;/p&gt;
&lt;p&gt;Using our script, monitoring generated images on TensorBoard is a no-brainer:&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;center&gt;
&lt;img src="https://leemeng.tw/images/cartoongan/tensorboard-image-demo.jpg"/&gt;
&lt;/center&gt;
&lt;center&gt;
                        the sooner you get feedback, the sooner you can get new ideas and improve your models
                        &lt;br/&gt;
&lt;br/&gt;
&lt;/center&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Although we only record CartoonGAN-specific metrics and images here, you can easily apply same technique to monitor any other models you like.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Finally, in order to get a sense of how CartoonGAN is doing during the training phase, we can save some images and use them as a validation set.&lt;/p&gt;
&lt;p&gt;The idea here is to "test" CartoonGAN using same images periodically so that we can observe how it improves over time:&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;video autoplay="" loop="" muted="" playsinline="" poster="https://leemeng.tw/images/cartoongan/training_progress.jpg"&gt;
&lt;source src="https://leemeng.tw/images/cartoongan/training_progress.mp4" type="video/mp4"/&gt;
                    您的瀏覽器不支援影片標籤，請留言通知我：S
                &lt;/video&gt;
&lt;center&gt;
                        CartoonGAN becomed better and better transforming validation set into anime
                        &lt;br/&gt;
&lt;br/&gt;
&lt;/center&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Even before the training is finished, you can tell that CartoonGAN somehow learns to transform real world images into cartoon-like images with clear edges and smooth color shading.&lt;/p&gt;
&lt;p&gt;Training a GAN like CartoonGAN is far more difficult than training a &lt;a href="https://www.tensorflow.org/tutorials/keras/basic_classification"&gt;simple classifier&lt;/a&gt;. But in &lt;a href="https://github.com/mnicnc404/CartoonGan-tensorflow"&gt;our github repo&lt;/a&gt;, we have tried our best to make the TensorFlow code clear and easy to understand, hoping it will help more people to get started.&lt;/p&gt;
&lt;p&gt;Needless to say, you will be able to get a better understanding of our code if you already know some basics. In the next section, I will list some good learning resources for your reference.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Recommended-learning-resources"&gt;Recommended learning resources&lt;a class="anchor-link" href="#Recommended-learning-resources"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Recently, deep learning-based generative models are very popular and GAN is one of the most exciting research areas. The CartoonGAN we saw in this post is just a simple application in the ever-growing &lt;a href="https://github.com/hindupuravinash/the-gan-zoo"&gt;GAN zoo&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;center&gt;
&lt;img src="https://leemeng.tw/images/cartoongan/tf-dcgan.png"/&gt;
&lt;/center&gt;
&lt;center&gt;
                        In a typical GAN setting, there are two independent neural networks, called generator and discriminator, competing with each other
                        &lt;br/&gt;
&lt;br/&gt;
&lt;/center&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;For those who want to learn more about GAN, I recommend the following resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yFBFl1cLYx8&amp;amp;index=1&amp;amp;list=PLtBw6njQRU-rwp5__7C0oIVt26ZgjG9NI"&gt;MIT 6.S191 Deep Generative Models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://poloclub.github.io/ganlab/"&gt;GAN Lab let you train GANs on browser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cs.stanford.edu/people/karpathy/gan/"&gt;Andrej Karpathy's online GAN demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tensorflow.org/alpha/tutorials/generative/dcgan"&gt;TensorFlow offical tutorial teach you how to generate MNIST using DCGAN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/syncedreview/reproducing-japanese-anime-styles-with-cartoongan-ai-cf30d583736e"&gt;Synced: Reproducing Japanese Anime Styles With CartoonGAN AI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://distill.pub/2019/gan-open-problems/"&gt;Open Questions about Generative Adversarial Networks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;center&gt;
&lt;img src="https://leemeng.tw/images/cartoongan/mit-gan.png"/&gt;
&lt;/center&gt;
&lt;center&gt;
                        MIT 6.S191 Deep Generative Models is a good place to start learning GAN concepts
                        &lt;br/&gt;
&lt;br/&gt;
&lt;/center&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Research on generative models and GAN are evolving rapidly, but I believe you will be able to implement some simple GANs and understand code written by others after studying these learning resources.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="To-sum-up"&gt;To sum up&lt;a class="anchor-link" href="#To-sum-up"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;blockquote&gt;
&lt;p&gt;
                        AI technology and applications like CartoonGAN should be more accessable to everyone, not only researchers or machine learning practitioners. 
                        &lt;br/&gt;
&lt;br/&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;With this in mind, I built the project to let you create your own anime in no time and hope it can encourge some of you to explore more about GAN and generative models, and create more interesting AI applications in the future.&lt;/p&gt;
&lt;p&gt;Many thanks to the authors of CartoonGAN, TensorFlow/TensorFlow.js teams and my friend &lt;a href="https://github.com/mnicnc404"&gt;mnicnc404&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Oh! Also don't forget to share what anime you generate! You can find me on &lt;a href="https://twitter.com/leemengtw"&gt;Twitter&lt;/a&gt; or &lt;a href="https://www.facebook.com/LeeMengTaiwan"&gt;Facebook&lt;/a&gt;. Let the world be filled with anime! :D&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;script src="https://leemeng.tw/tfjs-apps/cartoongan/dist/tf.js"&gt;&lt;/script&gt;
&lt;script src="https://leemeng.tw/tfjs-apps/cartoongan/cartoongan.js"&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;/div&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = '//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: 'center'," +
        "    displayIndent: '0em'," +
        "    showMathMenu: true," +
        "    tex2jax: { " +
        "        inlineMath: [ ['$','$'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        " linebreaks: { automatic: true, width: '95% container' }, " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
        "    } " +
        "}); ";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;
</content><category term="Miscellaneous"></category><category term="GAN"></category><category term="TensorFlow"></category><category term="TensorFlow.js"></category></entry></feed>